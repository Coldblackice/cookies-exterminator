<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
		xmlns:html="http://www.w3.org/1999/xhtml"
		id="cookextermPrefs"
		title="Crush Those Cookies preferences" 
		style="min-width: 385px; min-height: 340px;"
		windowtype="cookextermPrefsWindow">

  <script type="application/x-javascript">
	<![CDATA[
		Components.utils.import("resource://gre/modules/Services.jsm");

		function onWindowLoad() {
			Services.obs.notifyObservers(window, "cookextermPrefsLoad", null);

			updateDomainsListbox("domainsListbox", "whitelistedDomains");
			updateDomainsListbox("domainsListboxTemp", "whitelistedDomainsTemp");

			let tabbox = window.document.getElementById("tabbox");

			if (window.arguments && window.arguments[0] == "whitelist") {
				let tab = window.document.getElementById("whitelistTab");
				let tabpanel = window.document.getElementById("whitelistTabpanel");

				tabbox.selectedTab = tab;
				tabbox.selectedPanel = tabpanel;
			} else {
				let tab = window.document.getElementById("generalTab");
				let tabpanel = window.document.getElementById("generalTabpanel");

				tabbox.selectedTab = tab;
				tabbox.selectedPanel = tabpanel;
			}
		}

		function onReset() {
			Services.obs.notifyObservers(window, "cookextermPrefsLoad", null);

			updateDomainsListbox("domainsListbox", "whitelistedDomains");
			updateDomainsListbox("domainsListboxTemp", "whitelistedDomainsTemp");
		} 

		function onApply() {
			Services.obs.notifyObservers(window, "cookextermPrefsApply", null);
			window.close();
		}

		function onSelect(domainsListbox) {
			let selectedDomain = domainsListbox.getSelectedItem(0);

			if (selectedDomain) {
				let newDomainTextbox = window.document.getElementById("newDomainTextbox");
				let newDomainTextboxGrey = window.document.getElementById("newDomainTextboxGrey");

				newDomainTextbox.value = selectedDomain.value;
				newDomainTextboxGrey.value = selectedDomain.value;
			}
		}

		function onAddDomain(domListbox, domTextbox, listedDomains) {
			let domainsListbox = window.document.getElementById(domListbox);
			let newDomainTextbox = window.document.getElementById(domTextbox);
			let domTextbox1 = window.document.getElementById("newDomainTextbox");
			let domTextbox2 = window.document.getElementById("newDomainTextboxGrey");

			if (newDomainTextbox.value != "") {
				domainsListbox.appendItem(newDomainTextbox.value, newDomainTextbox.value);
				domTextbox1.value = ""; domTextbox2.value = "";

				sortDomainsListbox(domainsListbox);
				updateWhitelistedDomains(domListbox, listedDomains);
			}
		}

		function onEditDomain(domListbox, domTextbox, listedDomains) {
			let domainsListbox = window.document.getElementById(domListbox);
			let selectedDomain = domainsListbox.getSelectedItem(0);
			let newDomainTextbox = window.document.getElementById(domTextbox);
			let domTextbox1 = window.document.getElementById("newDomainTextbox");
			let domTextbox2 = window.document.getElementById("newDomainTextboxGrey");

			if (selectedDomain && newDomainTextbox.value != "") {
				selectedDomain.value = newDomainTextbox.value;
				selectedDomain.label = newDomainTextbox.value;

				domTextbox1.value = ""; domTextbox2.value = "";
				domainsListbox.clearSelection();

				sortDomainsListbox(domainsListbox);
				updateWhitelistedDomains(domListbox, listedDomains);
			}
		}

		function onRemoveDomain(domListbox, domTextbox, listedDomains) {
			let domainsListbox = window.document.getElementById(domListbox);
			let selectedDomain = domainsListbox.getSelectedItem(0);

			if (selectedDomain) {
				let selectedDomainIndex = domainsListbox.getIndexOfItem(selectedDomain);
				let newDomainTextbox = window.document.getElementById(domTextbox);
				let domTextbox1 = window.document.getElementById("newDomainTextbox");
				let domTextbox2 = window.document.getElementById("newDomainTextboxGrey");

				domainsListbox.removeItemAt(selectedDomainIndex);
				domainsListbox.clearSelection();

				domTextbox1.value = ""; domTextbox2.value = "";

				sortDomainsListbox(domainsListbox);
				updateWhitelistedDomains(domListbox, listedDomains);
			}
		}

		function updateWhitelistedDomains(domListbox, listedDomains) {
			let whitelistedDomains = window.document.getElementById(listedDomains);
			whitelistedDomains.value = "";

			let domainsListbox = window.document.getElementById(domListbox);
			let rows = domainsListbox.getRowCount();

			for (let i = 0; i < rows; i++) {
				let item = domainsListbox.getItemAtIndex(i);
				whitelistedDomains.value += item.value + ";";
			}

			whitelistedDomains.value = whitelistedDomains.value.slice(0, -1);
		}

		function updateDomainsListbox(listbox, domains) {
			let domainsListbox = window.document.getElementById(listbox);
			let rows = domainsListbox.getRowCount();

			for (let i = 0; i < rows; i++) {
				domainsListbox.removeItemAt(0);
			}

			let whitelistedDomains = window.document.getElementById(domains);

			if (whitelistedDomains.value != "") {
				let separatedDomains = whitelistedDomains.value.split(';');

				for (let domain of separatedDomains) {
					domainsListbox.appendItem(domain, domain);
				}
			}

			sortDomainsListbox(domainsListbox);
		}

		function sortDomainsListbox(domainsListbox) {
			let rows = domainsListbox.getRowCount();

			for (let i = 0; i < rows; i++) {
				for (let j = rows - 1; j > i; j--) {
					let domain = domainsListbox.getItemAtIndex(i);
					let anotherDomain = domainsListbox.getItemAtIndex(j);

					if (anotherDomain.value < domain.value) {
						domain.value = anotherDomain.value;
						anotherDomain.value = domain.label;
						domain.label = domain.value;
						anotherDomain.label = anotherDomain.value;
					}
				}
			}
		}

		window.onload = onWindowLoad;
	]]>
  </script>

  <tabbox id="tabbox" flex="1" style="padding: 5px">
	<tabs>
	  <tab id="generalTab" label="Options"/>
	  <tab id="whitelistTab" label="Whitelist"/>
	  <tab id="greylistTab" label="Greylist"/>
	</tabs>

	<tabpanels flex="1">

	  <tabpanel id="generalTabpanel">
		<vbox flex="1">
		  <hbox flex="0" align="center">
		   <checkbox id="suspendCrushing" label="Suspend crushing cookies"/>
		  </hbox>

		  <spacer flex="0" height="15"/>

		  <hbox flex="0" align="center">
		   <checkbox id="enableLogging" label="Log all activity"/>
		  </hbox>

		  <hbox flex="0" align="center">
		   <checkbox id="enableNotifications" label="Use pop-up notifications"/>
		  </hbox>

		  <spacer flex="0" height="15"/>

		  <hbox flex="0" align="center">
		   <checkbox id="enableStrictDomainChecking" label="Strict domain and subdomain checking"/>
		  </hbox>

		  <spacer flex="0" height="15"/>

		  <hbox flex="0" align="center">
			<checkbox id="keepCrushingThirdPartyCookies" label="Crush third-party cookies"/>
		  </hbox>

		  <hbox flex="0" align="center">
			<checkbox id="keepCrushingSessionCookies" label="Crush session cookies"/>
		  </hbox>

		  <hbox flex="0" align="center">
			<checkbox id="keepCrushingLocalStorage" label="Crush LocalStorage along with cookies"/>
		  </hbox>

		  <spacer flex="0" height="15"/>

		  <hbox flex="0" align="center">
			<label value="Crushing delay in seconds"/>
			<spacer flex="1"/>
			<textbox id="crushingDelay" type="number" width="40" min="0" max="600"/>
			<spacer flex="10"/>
		  </hbox>

		</vbox>
	  </tabpanel>

	  <tabpanel id="whitelistTabpanel">
		<vbox flex="1">
		  <listbox id="domainsListbox" height="250" onselect="onSelect(this);"></listbox>

		  <hbox flex="1" align="center">
			<textbox id="newDomainTextbox" width="150"/>
			<button label="Add" oncommand="onAddDomain('domainsListbox', 'newDomainTextbox', 'whitelistedDomains');" style="min-width: 50px"/>
			<spacer flex="1"/>
			<button label="Update" oncommand="onEditDomain('domainsListbox', 'newDomainTextbox', 'whitelistedDomains');" style="min-width: 50px"/>
			<button label="Remove" oncommand="onRemoveDomain('domainsListbox', 'newDomainTextbox', 'whitelistedDomains');"/>
		  </hbox>
		</vbox>

		<textbox id="whitelistedDomains" hidden="true"/>
	  </tabpanel>

	  <tabpanel id="greylistTabpanel">
		<vbox flex="1">
		  <listbox id="domainsListboxTemp" height="250" onselect="onSelect(this);"></listbox>

		  <hbox flex="1" align="center">
			<textbox id="newDomainTextboxGrey" width="150"/>
			<button label="Add" oncommand="onAddDomain('domainsListboxTemp', 'newDomainTextboxGrey', 'whitelistedDomainsTemp');" style="min-width: 50px"/>
			<spacer flex="1"/>
			<button label="Update" oncommand="onEditDomain('domainsListboxTemp', 'newDomainTextboxGrey', 'whitelistedDomainsTemp');" style="min-width: 50px"/>
			<button label="Remove" oncommand="onRemoveDomain('domainsListboxTemp', 'newDomainTextboxGrey', 'whitelistedDomainsTemp');"/>
		  </hbox>
		</vbox>

		<textbox id="whitelistedDomainsTemp" hidden="true"/>
	  </tabpanel>

	</tabpanels>
  </tabbox>

  <hbox style="padding: 0px 0px 5px 0px">
	<button label="Reset" oncommand="onReset();"/>
	<spacer flex="1"/>
	<button label="Accept" oncommand="onApply();"/>
	<button label="Discard" onclick="window.close();"/>
  </hbox>

</window>
